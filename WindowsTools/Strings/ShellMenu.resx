<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddMenuItem" xml:space="preserve">
    <value>Add menu item</value>
  </data>
  <data name="Apply" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="ClearMenu" xml:space="preserve">
    <value>Clear menu items</value>
  </data>
  <data name="ClearMenuToolTip" xml:space="preserve">
    <value>Clear all custom menu items</value>
  </data>
  <data name="DarkThemeIcon" xml:space="preserve">
    <value>Dark theme icon</value>
  </data>
  <data name="DefaultIcon" xml:space="preserve">
    <value>Default icon</value>
  </data>
  <data name="DefaultRootText" xml:space="preserve">
    <value>Windows tools</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EmptyDescription" xml:space="preserve">
    <value>There's no menu items</value>
  </data>
  <data name="FilterCondition" xml:space="preserve">
    <value>Icon file(*.ico)|*.ico</value>
  </data>
  <data name="FirstLevelMenu" xml:space="preserve">
    <value>First level menu</value>
  </data>
  <data name="LightThemeIcon" xml:space="preserve">
    <value>Light theme icon</value>
  </data>
  <data name="MenuIcon" xml:space="preserve">
    <value>Menu icon</value>
  </data>
  <data name="MenuIconToolTip" xml:space="preserve">
    <value>Menu icon path:</value>
  </data>
  <data name="MenuList" xml:space="preserve">
    <value>Menu list</value>
  </data>
  <data name="MenuOrder" xml:space="preserve">
    <value>Menu order</value>
  </data>
  <data name="MenuProgramPath" xml:space="preserve">
    <value>Program file path</value>
  </data>
  <data name="MenuProgramPathPHText" xml:space="preserve">
    <value>The application path is not set</value>
  </data>
  <data name="MenuProgramPathToolTip" xml:space="preserve">
    <value>Menu program path: </value>
  </data>
  <data name="MenuSettings" xml:space="preserve">
    <value>Menu settings</value>
  </data>
  <data name="MenuTitle" xml:space="preserve">
    <value>Menu title</value>
  </data>
  <data name="MenuTitlePHText" xml:space="preserve">
    <value>Please input the menu title</value>
  </data>
  <data name="MenuTitleToolTip" xml:space="preserve">
    <value>Menu title: </value>
  </data>
  <data name="Modify" xml:space="preserve">
    <value>Modify</value>
  </data>
  <data name="Operation" xml:space="preserve">
    <value>Operation</value>
  </data>
  <data name="Precautions" xml:space="preserve">
    <value>Precautions</value>
  </data>
  <data name="PrecautionsContent1" xml:space="preserve">
    <value>1.The submenu level is only supported up to the secondary menu</value>
  </data>
  <data name="PrecautionsContent2" xml:space="preserve">
    <value>2.After the menu content is updated, there may be a delay. Please open it after a period of time</value>
  </data>
  <data name="PrecautionsContent3" xml:space="preserve">
    <value>3. It is recommended to avoid too many secondary menus, because this may lead to a long menu loading time, which will cause a deadlock.</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="ReturnDefault" xml:space="preserve">
    <value>Return default</value>
  </data>
  <data name="RootMenuIcon" xml:space="preserve">
    <value>Root menu icon</value>
  </data>
  <data name="RootMenuName" xml:space="preserve">
    <value>Root menu name</value>
  </data>
  <data name="RootMenuSettings" xml:space="preserve">
    <value>Root menu settings</value>
  </data>
  <data name="SecondLevelMenu" xml:space="preserve">
    <value>Second level menu</value>
  </data>
  <data name="SelectIcon" xml:space="preserve">
    <value>Select icon</value>
  </data>
  <data name="ShouldEnableThemeIcon" xml:space="preserve">
    <value>Whether to enable theme icon</value>
  </data>
  <data name="ShouldEnableThemeIconOffContent" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="ShouldEnableThemeIconOnContent" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="ShouldEnableThemeIconToolTip" xml:space="preserve">
    <value>When turned on, you can set menu icon individually for light and dark themes</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Custom shell menu</value>
  </data>
  <data name="UnknownDarkThemeIconPath" xml:space="preserve">
    <value>The dark theme icon path is not set</value>
  </data>
  <data name="UnknownDefaultIconPath" xml:space="preserve">
    <value>The icon path is not set</value>
  </data>
  <data name="UnknownLightThemeIconPath" xml:space="preserve">
    <value>The light theme icon path is not set</value>
  </data>
</root>