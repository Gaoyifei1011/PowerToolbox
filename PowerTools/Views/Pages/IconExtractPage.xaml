<Page
    x:Class="PowerTools.Views.Pages.IconExtractPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:Microsoft.UI.Xaml.Controls"
    xmlns:converter="using:PowerTools.Helpers.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="using:PowerTools.Models"
    xmlns:rootservice="using:PowerTools.Services.Root"
    xmlns:system="using:System"
    AllowDrop="True"
    NavigationCacheMode="Enabled"
    mc:Ignorable="d">

    <Grid Padding="0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <TextBlock
            Grid.Row="0"
            Margin="30,15,30,6"
            FontSize="22"
            Text="{x:Bind rootservice:ResourceService.IconExtractResource.GetString('Title')}" />

        <TextBlock
            x:Name="GetResultsText"
            Grid.Row="1"
            Margin="32,0,32,3"
            FontSize="14"
            Text="{x:Bind GetResults, Mode=OneWay}"
            TextTrimming="CharacterEllipsis"
            TextWrapping="NoWrap">

            <ToolTipService.ToolTip>
                <ToolTip
                    MaxWidth="9999"
                    Content="{x:Bind GetResults, Mode=OneWay}"
                    Visibility="{x:Bind GetResultsText.IsTextTrimmed, Mode=OneWay}" />
            </ToolTipService.ToolTip>
        </TextBlock>

        <Grid Grid.Row="2" Margin="30,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <GridView
                x:Name="IconsGridView"
                Grid.Column="0"
                Margin="0,0,0,5"
                Padding="5"
                Background="{ThemeResource LayerFillColorDefaultBrush}"
                BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                BorderThickness="1"
                CornerRadius="{StaticResource ControlCornerRadius}"
                IsSwipeEnabled="False"
                ItemsSource="{x:Bind IconCollection, Mode=OneWay}"
                SelectionChanged="{x:Bind OnSelectionChanged}"
                SelectionMode="Extended"
                TabIndex="1">

                <GridView.ItemTemplate>
                    <DataTemplate x:DataType="model:IconModel">
                        <Grid
                            Width="90"
                            Padding="8"
                            HorizontalAlignment="Stretch"
                            Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                            BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                            BorderThickness="1"
                            CornerRadius="{StaticResource ControlCornerRadius}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <Grid
                                Grid.Row="0"
                                Width="72"
                                Margin="0,10"
                                CornerRadius="{ThemeResource ControlCornerRadius}">
                                <Image
                                    Width="48"
                                    HorizontalAlignment="Center"
                                    Source="{x:Bind IconImage}"
                                    Stretch="Uniform" />
                            </Grid>

                            <TextBlock
                                Grid.Row="1"
                                HorizontalAlignment="Center"
                                FontSize="16"
                                Text="{x:Bind DisplayIndex}"
                                TextLineBounds="TrimToCapHeight"
                                TextWrapping="NoWrap" />
                        </Grid>
                    </DataTemplate>
                </GridView.ItemTemplate>

                <GridView.ItemContainerStyle>
                    <Style BasedOn="{StaticResource DefaultGridViewItemStyle}" TargetType="GridViewItem">
                        <Setter Property="Margin" Value="0,0,6,6" />
                    </Style>
                </GridView.ItemContainerStyle>
            </GridView>

            <TextBlock
                Grid.Column="0"
                Margin="20,0,20,5"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Canvas.ZIndex="1"
                FontSize="20"
                Text="{x:Bind NoResources, Mode=OneWay}"
                TextAlignment="Center"
                TextWrapping="Wrap"
                Visibility="{x:Bind converter:ValueConverterHelper.IntToVisibilityReverseConvert(IconCollection.Count), Mode=OneWay}" />

            <AppBarSeparator Grid.Column="1" Margin="10,0" />

            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Grid Grid.Row="0" RowSpacing="3">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <TextBlock
                            Grid.Row="0"
                            Grid.Column="0"
                            VerticalAlignment="Center"
                            Text="{x:Bind rootservice:ResourceService.IconExtractResource.GetString('SaveIconFormat')}" />

                        <controls:DropDownButton
                            Grid.Row="0"
                            Grid.Column="1"
                            Margin="0,0,0,3"
                            HorizontalAlignment="Stretch"
                            Content="{x:Bind SelectedIconFormat.Key, Mode=OneWay}">

                            <controls:DropDownButton.Flyout>
                                <MenuFlyout Placement="Bottom">
                                    <controls:RadioMenuFlyoutItem
                                        Height="32"
                                        Padding="11,0"
                                        Click="{x:Bind OnIconFormatClicked}"
                                        GroupName="IconFormatRadioGroup"
                                        IsChecked="{x:Bind x:String.Equals(SelectedIconFormat.Key, IconFormatList[0].Key), Mode=OneWay}"
                                        Tag="{x:Bind IconFormatList[0]}"
                                        Text="{x:Bind system:Convert.ToString(IconFormatList[0].Value)}" />

                                    <controls:RadioMenuFlyoutItem
                                        Height="32"
                                        Padding="11,0"
                                        Click="{x:Bind OnIconFormatClicked}"
                                        GroupName="IconFormatRadioGroup"
                                        IsChecked="{x:Bind x:String.Equals(SelectedIconFormat.Key, IconFormatList[1].Key), Mode=OneWay}"
                                        Tag="{x:Bind IconFormatList[1]}"
                                        Text="{x:Bind system:Convert.ToString(IconFormatList[1].Value)}" />
                                </MenuFlyout>
                            </controls:DropDownButton.Flyout>
                        </controls:DropDownButton>

                        <TextBlock
                            Grid.Row="1"
                            Grid.Column="0"
                            VerticalAlignment="Center"
                            Text="{x:Bind rootservice:ResourceService.IconExtractResource.GetString('SaveIconSize')}" />

                        <controls:DropDownButton
                            Grid.Row="1"
                            Grid.Column="1"
                            HorizontalAlignment="Stretch"
                            Content="{x:Bind SelectedIconSize.Value, Mode=OneWay}">

                            <controls:DropDownButton.Flyout>
                                <MenuFlyout Placement="Bottom">
                                    <controls:RadioMenuFlyoutItem
                                        Height="32"
                                        Padding="11,0"
                                        Click="{x:Bind OnIconSizeClicked}"
                                        GroupName="IconSizeRadioGroup"
                                        IsChecked="{x:Bind x:String.Equals(SelectedIconSize.Key, IconSizeList[0].Key), Mode=OneWay}"
                                        Tag="{x:Bind IconSizeList[0]}"
                                        Text="{x:Bind system:Convert.ToString(IconSizeList[0].Value)}" />

                                    <controls:RadioMenuFlyoutItem
                                        Height="32"
                                        Padding="11,0"
                                        Click="{x:Bind OnIconSizeClicked}"
                                        GroupName="IconSizeRadioGroup"
                                        IsChecked="{x:Bind x:String.Equals(SelectedIconSize.Key, IconSizeList[1].Key), Mode=OneWay}"
                                        Tag="{x:Bind IconSizeList[1]}"
                                        Text="{x:Bind system:Convert.ToString(IconSizeList[1].Value)}" />

                                    <controls:RadioMenuFlyoutItem
                                        Height="32"
                                        Padding="11,0"
                                        Click="{x:Bind OnIconSizeClicked}"
                                        GroupName="IconSizeRadioGroup"
                                        IsChecked="{x:Bind x:String.Equals(SelectedIconSize.Key, IconSizeList[2].Key), Mode=OneWay}"
                                        Tag="{x:Bind IconSizeList[2]}"
                                        Text="{x:Bind system:Convert.ToString(IconSizeList[2].Value)}" />

                                    <controls:RadioMenuFlyoutItem
                                        Height="32"
                                        Padding="11,0"
                                        Click="{x:Bind OnIconSizeClicked}"
                                        GroupName="IconSizeRadioGroup"
                                        IsChecked="{x:Bind x:String.Equals(SelectedIconSize.Key, IconSizeList[3].Key), Mode=OneWay}"
                                        Tag="{x:Bind IconSizeList[3]}"
                                        Text="{x:Bind system:Convert.ToString(IconSizeList[3].Value)}" />

                                    <controls:RadioMenuFlyoutItem
                                        Height="32"
                                        Padding="11,0"
                                        Click="{x:Bind OnIconSizeClicked}"
                                        GroupName="IconSizeRadioGroup"
                                        IsChecked="{x:Bind x:String.Equals(SelectedIconSize.Key, IconSizeList[4].Key), Mode=OneWay}"
                                        Tag="{x:Bind IconSizeList[4]}"
                                        Text="{x:Bind system:Convert.ToString(IconSizeList[4].Value)}" />

                                    <controls:RadioMenuFlyoutItem
                                        Height="32"
                                        Padding="11,0"
                                        Click="{x:Bind OnIconSizeClicked}"
                                        GroupName="IconSizeRadioGroup"
                                        IsChecked="{x:Bind x:String.Equals(SelectedIconSize.Key, IconSizeList[5].Key), Mode=OneWay}"
                                        Tag="{x:Bind IconSizeList[5]}"
                                        Text="{x:Bind system:Convert.ToString(IconSizeList[5].Value)}" />

                                    <controls:RadioMenuFlyoutItem
                                        Height="32"
                                        Padding="11,0"
                                        Click="{x:Bind OnIconSizeClicked}"
                                        GroupName="IconSizeRadioGroup"
                                        IsChecked="{x:Bind x:String.Equals(SelectedIconSize.Key, IconSizeList[6].Key), Mode=OneWay}"
                                        Tag="{x:Bind IconSizeList[6]}"
                                        Text="{x:Bind system:Convert.ToString(IconSizeList[6].Value)}" />

                                    <controls:RadioMenuFlyoutItem
                                        Height="32"
                                        Padding="11,0"
                                        Click="{x:Bind OnIconSizeClicked}"
                                        GroupName="IconSizeRadioGroup"
                                        IsChecked="{x:Bind x:String.Equals(SelectedIconSize.Key, IconSizeList[7].Key), Mode=OneWay}"
                                        Tag="{x:Bind IconSizeList[7]}"
                                        Text="{x:Bind system:Convert.ToString(IconSizeList[7].Value)}" />
                                </MenuFlyout>
                            </controls:DropDownButton.Flyout>
                        </controls:DropDownButton>
                    </Grid>
                </Grid>

                <MenuFlyoutSeparator Grid.Row="1" Margin="5,3" />

                <Grid
                    Grid.Row="2"
                    Width="260"
                    Height="260"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                    BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                    BorderThickness="1"
                    CornerRadius="{StaticResource ControlCornerRadius}">

                    <Image
                        MaxWidth="256"
                        MaxHeight="256"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Source="{x:Bind ImageSource, Mode=OneWay}"
                        Stretch="None" />

                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="20"
                        Text="{x:Bind rootservice:ResourceService.IconExtractResource.GetString('NoPreviewResources')}"
                        TextWrapping="Wrap"
                        Visibility="{x:Bind IsImageEmpty, Mode=OneWay}" />
                </Grid>

                <MenuFlyoutSeparator Grid.Row="3" Margin="5,3" />

                <Button
                    Grid.Row="4"
                    Margin="0,0,0,3"
                    HorizontalAlignment="Stretch"
                    Click="{x:Bind OnSelectFileClicked}"
                    Content="{x:Bind rootservice:ResourceService.IconExtractResource.GetString('SelectFile')}" />

                <Button
                    Grid.Row="5"
                    Margin="0,0,0,3"
                    HorizontalAlignment="Stretch"
                    Click="{x:Bind OnExportSelectedIconsClicked}"
                    Content="{x:Bind rootservice:ResourceService.IconExtractResource.GetString('ExportSelectedIcons')}"
                    IsEnabled="{x:Bind IsSelected, Mode=OneWay}" />

                <Button
                    Grid.Row="6"
                    HorizontalAlignment="Stretch"
                    Click="{x:Bind OnExportAllIconsClicked}"
                    Content="{x:Bind rootservice:ResourceService.IconExtractResource.GetString('ExportAllIcons')}"
                    IsEnabled="{x:Bind system:Convert.ToBoolean(IconCollection.Count), Mode=OneWay}" />

                <StackPanel
                    Grid.Row="7"
                    Margin="0,0,0,5"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Bottom"
                    Orientation="Horizontal"
                    Spacing="5"
                    Visibility="{x:Bind IsSaving, Mode=OneWay}">
                    <controls:ProgressRing
                        Width="20"
                        Height="20"
                        IsActive="{x:Bind IsSaving, Mode=OneWay}" />

                    <TextBlock Text="{x:Bind rootservice:ResourceService.IconExtractResource.GetString('SavingNow')}" />
                </StackPanel>
            </Grid>
        </Grid>
    </Grid>
</Page>
