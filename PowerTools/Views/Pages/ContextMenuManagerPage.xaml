<Page
    x:Class="PowerTools.Views.Pages.ContextMenuManagerPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="using:PowerTools.Helpers.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:enum="using:PowerTools.Extensions.DataType.Enums"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="using:PowerTools.Models"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:rootservice="using:PowerTools.Services.Root"
    NavigationCacheMode="Enabled"
    mc:Ignorable="d">

    <Page.Resources>
        <XamlUICommand x:Name="CheckBoxClickCommand" ExecuteRequested="{x:Bind OnCheckBoxClickExecuteRequested}" />
        <XamlUICommand x:Name="OpenPackagePathCommand" ExecuteRequested="{x:Bind OnOpenPackagePathExecuteRequested}" />
    </Page.Resources>

    <Grid Padding="0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <TextBlock
            Grid.Row="0"
            Margin="30,10,30,0"
            HorizontalAlignment="Left"
            FontSize="22"
            Text="{x:Bind rootservice:ResourceService.ContextMenuManagerResource.GetString('ContextMenu')}" />

        <!--  右键菜单管理控制栏  -->
        <Grid
            Grid.Row="1"
            Height="61"
            Margin="30,0,30,3"
            Padding="12,0,10,0"
            Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
            BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
            BorderThickness="1"
            CornerRadius="{StaticResource ControlCornerRadius}">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <AutoSuggestBox
                Grid.Column="0"
                Margin="0,0,2,0"
                VerticalAlignment="Center"
                IsEnabled="{x:Bind GetIsLoading(ContextMenuResultKind), Mode=OneWay}"
                PlaceholderText="{x:Bind rootservice:ResourceService.ContextMenuManagerResource.GetString('SearchAppNamePHText')}"
                QuerySubmitted="{x:Bind OnQuerySubmitted}"
                Text="{x:Bind SearchText, Mode=OneWay}"
                TextChanged="{x:Bind OnTextChanged}" />

            <CommandBar
                Grid.Column="1"
                VerticalAlignment="Center"
                DefaultLabelPosition="Right"
                IsEnabled="{x:Bind GetIsLoading(ContextMenuResultKind), Mode=OneWay}">

                <CommandBar.Resources>
                    <SolidColorBrush x:Key="CommandBarBackgroundOpen" Color="Transparent" />
                    <Thickness x:Key="CommandBarBorderThicknessOpen">0</Thickness>
                </CommandBar.Resources>

                <CommandBar.PrimaryCommands>
                    <AppBarButton Click="{x:Bind OnRefreshClicked}" Label="{x:Bind rootservice:ResourceService.ContextMenuManagerResource.GetString('Refresh')}">
                        <AppBarButton.Icon>
                            <FontIcon Glyph="&#xE72C;" />
                        </AppBarButton.Icon>
                    </AppBarButton>

                    <AppBarButton Click="{x:Bind OnRestoreDefaultClicked}" Label="{x:Bind rootservice:ResourceService.ContextMenuManagerResource.GetString('RestoreDefault')}">
                        <AppBarButton.Icon>
                            <FontIcon Glyph="&#xE777;" />
                        </AppBarButton.Icon>
                    </AppBarButton>

                    <AppBarButton Label="{x:Bind rootservice:ResourceService.ContextMenuManagerResource.GetString('LearnContextMenuManager')}">
                        <AppBarButton.Icon>
                            <FontIcon Glyph="&#xEDE3;" />
                        </AppBarButton.Icon>

                        <AppBarButton.Flyout>
                            <Flyout Placement="Bottom" ShouldConstrainToRootBounds="False">

                                <Flyout.FlyoutPresenterStyle>
                                    <Style BasedOn="{StaticResource DefaultFlyoutPresenterStyle}" TargetType="FlyoutPresenter">
                                        <Setter Property="Padding" Value="0" />
                                        <Setter Property="MaxWidth" Value="9999" />
                                    </Style>
                                </Flyout.FlyoutPresenterStyle>

                                <StackPanel
                                    Width="450"
                                    Padding="14"
                                    Spacing="5">

                                    <StackPanel Orientation="Horizontal">
                                        <FontIcon
                                            Grid.Column="0"
                                            Margin="0,0,12,0"
                                            FontSize="16"
                                            Glyph="&#xE8C9;" />

                                        <TextBlock FontWeight="SemiBold" Text="{x:Bind rootservice:ResourceService.ContextMenuManagerResource.GetString('ExplainTitle')}" />
                                    </StackPanel>

                                    <MenuFlyoutSeparator Margin="3,0,6,0" Background="{ThemeResource SurfaceStrokeColorDefaultBrush}" />

                                    <TextBlock
                                        Margin="0,0,2,0"
                                        Text="{x:Bind rootservice:ResourceService.ContextMenuManagerResource.GetString('ExplanContent1')}"
                                        TextAlignment="Justify"
                                        TextWrapping="Wrap" />
                                    <TextBlock
                                        Margin="0,0,2,0"
                                        Text="{x:Bind rootservice:ResourceService.ContextMenuManagerResource.GetString('ExplanContent2')}"
                                        TextAlignment="Justify"
                                        TextWrapping="Wrap" />
                                    <TextBlock
                                        Margin="0,0,2,0"
                                        Text="{x:Bind rootservice:ResourceService.ContextMenuManagerResource.GetString('ExplanContent3')}"
                                        TextAlignment="Justify"
                                        TextWrapping="Wrap" />
                                    <TextBlock
                                        Margin="0,0,2,0"
                                        Text="{x:Bind rootservice:ResourceService.ContextMenuManagerResource.GetString('ExplanContent4')}"
                                        TextAlignment="Justify"
                                        TextWrapping="Wrap" />
                                    <TextBlock
                                        Margin="0,0,2,0"
                                        Text="{x:Bind rootservice:ResourceService.ContextMenuManagerResource.GetString('ExplanContent5')}"
                                        TextAlignment="Justify"
                                        TextWrapping="Wrap" />
                                    <TextBlock
                                        Margin="0,0,2,0"
                                        Text="{x:Bind rootservice:ResourceService.ContextMenuManagerResource.GetString('ExplanContent6')}"
                                        TextAlignment="Justify"
                                        TextWrapping="Wrap" />

                                    <StackPanel
                                        HorizontalAlignment="Right"
                                        Orientation="Horizontal"
                                        Spacing="5">

                                        <Button Click="{x:Bind OnLearnCustomRightClickMenuClicked}" Content="{x:Bind rootservice:ResourceService.ContextMenuManagerResource.GetString('LearnCustomRightClickMenu')}" />
                                        <Button Click="{x:Bind OnOpenSettingsClicked}" Content="{x:Bind rootservice:ResourceService.ContextMenuManagerResource.GetString('OpenSettings')}" />
                                    </StackPanel>
                                </StackPanel>
                            </Flyout>
                        </AppBarButton.Flyout>
                    </AppBarButton>
                </CommandBar.PrimaryCommands>
            </CommandBar>
        </Grid>

        <!--  右键菜单状态显示栏  -->
        <Grid
            Grid.Row="2"
            Height="60"
            Margin="30,0,30,0"
            Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
            BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
            BorderThickness="1"
            CornerRadius="{StaticResource ControlCornerRadius}"
            Visibility="{x:Bind GetContextMenuSuccessfullyState(ContextMenuResultKind, x:False), Mode=OneWay}">

            <!--  正在加载中  -->
            <StackPanel
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Orientation="Horizontal"
                Spacing="10">

                <muxc:ProgressRing IsActive="True" IsEnabled="True" />

                <TextBlock
                    VerticalAlignment="Center"
                    Text="{x:Bind rootservice:ResourceService.ContextMenuManagerResource.GetString('LoadingContextMenuInformation')}"
                    TextAlignment="Center" />
            </StackPanel>

            <!--  加载失败（包含搜索结果为空）  -->
            <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="{x:Bind ContextMenuFailedContent, Mode=OneWay}"
                TextAlignment="Center"
                Visibility="{x:Bind CheckContextMenuState(ContextMenuResultKind, enum:ContextMenuResultKind.Failed), Mode=OneWay}" />
        </Grid>

        <!--  右键菜单结果展示项目控件  -->
        <ListView
            Grid.Row="3"
            Padding="30,0,30,30"
            ItemsSource="{x:Bind ContextMenuCollection, Mode=OneWay}"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
            ScrollViewer.HorizontalScrollMode="Disabled"
            ScrollViewer.VerticalScrollBarVisibility="Auto"
            ScrollViewer.VerticalScrollMode="Enabled"
            SelectionMode="None"
            Visibility="{x:Bind GetContextMenuSuccessfullyState(ContextMenuResultKind, x:True), Mode=OneWay}">

            <ListView.ItemContainerStyle>
                <Style BasedOn="{StaticResource DefaultListViewItemStyle}" TargetType="ListViewItem">
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="MinHeight" Value="0 " />
                </Style>
            </ListView.ItemContainerStyle>

            <ListView.ItemTemplate>
                <DataTemplate x:DataType="model:ContextMenuModel">
                    <muxc:Expander
                        Margin="0,0,0,2"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Stretch"
                        Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                        IsExpanded="False">

                        <muxc:Expander.Header>
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Grid
                                    Grid.Column="0"
                                    Width="30"
                                    Height="30"
                                    Margin="0,0,12,0"
                                    Padding="2"
                                    Background="{ThemeResource SolidBackgroundFillColorSecondaryBrush}"
                                    BorderBrush="{ThemeResource SurfaceStrokeColorDefaultBrush}"
                                    BorderThickness="1"
                                    CornerRadius="{StaticResource ControlCornerRadius}">
                                    <muxc:ImageIcon Source="{x:Bind PackageIcon}" />
                                </Grid>

                                <StackPanel
                                    Grid.Column="1"
                                    Margin="0,12"
                                    VerticalAlignment="Center"
                                    Orientation="Vertical">

                                    <TextBlock
                                        x:Name="PackageDisplayNameText"
                                        Style="{StaticResource BodyTextBlockStyle}"
                                        Text="{x:Bind PackageDisplayName}"
                                        TextTrimming="CharacterEllipsis"
                                        TextWrapping="NoWrap">

                                        <ToolTipService.ToolTip>
                                            <ToolTip
                                                MaxWidth="9999"
                                                Content="{x:Bind PackageDisplayName}"
                                                Visibility="{Binding ElementName=PackageDisplayNameText, Path=IsTextTrimmed, Mode=OneWay}" />
                                        </ToolTipService.ToolTip>
                                    </TextBlock>

                                    <TextBlock
                                        x:Name="PackageFullNameText"
                                        Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                        Style="{StaticResource CaptionTextBlockStyle}"
                                        Text="{x:Bind PackageFullName}"
                                        TextTrimming="CharacterEllipsis"
                                        TextWrapping="NoWrap">

                                        <ToolTipService.ToolTip>
                                            <ToolTip
                                                MaxWidth="9999"
                                                Content="{x:Bind PackageFullName}"
                                                Visibility="{Binding ElementName=PackageFullNameText, Path=IsTextTrimmed, Mode=OneWay}" />
                                        </ToolTipService.ToolTip>
                                    </TextBlock>
                                </StackPanel>

                                <Button
                                    Grid.Column="2"
                                    Width="32"
                                    Height="32"
                                    Margin="5,0,0,0"
                                    Padding="0"
                                    Command="{StaticResource OpenPackagePathCommand}"
                                    CommandParameter="{x:Bind PackagePath}"
                                    CornerRadius="{StaticResource ControlCornerRadius}"
                                    ToolTipService.ToolTip="{x:Bind rootservice:ResourceService.ContextMenuManagerResource.GetString('OpenPackagePath')}">

                                    <Button.Content>
                                        <FontIcon FontSize="14" Glyph="&#xE8B7;" />
                                    </Button.Content>
                                </Button>
                            </Grid>
                        </muxc:Expander.Header>

                        <muxc:Expander.Content>
                            <ListView
                                ItemsSource="{x:Bind ContextMenuItemCollection, Mode=OneWay}"
                                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                ScrollViewer.HorizontalScrollMode="Disabled"
                                ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                ScrollViewer.VerticalScrollMode="Disabled"
                                SelectionMode="None">

                                <ListView.ItemContainerStyle>
                                    <Style BasedOn="{StaticResource DefaultListViewItemStyle}" TargetType="ListViewItem">
                                        <Setter Property="Padding" Value="0" />
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                        <Setter Property="Margin" Value="0" />
                                        <Setter Property="MinHeight" Value="0 " />
                                    </Style>
                                </ListView.ItemContainerStyle>

                                <ListView.ItemTemplate>
                                    <DataTemplate x:DataType="model:ContextMenuItemModel">
                                        <Grid Margin="0,1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <CheckBox
                                                Grid.Column="0"
                                                MinWidth="0"
                                                Margin="4,0,9,0"
                                                Command="{StaticResource CheckBoxClickCommand}"
                                                CommandParameter="{x:Bind}"
                                                IsChecked="{x:Bind IsEnabled, Mode=OneWay}">

                                                <ToolTipService.ToolTip>
                                                    <ToolTip MaxWidth="9999">
                                                        <Grid>
                                                            <TextBlock Text="{x:Bind rootservice:ResourceService.ContextMenuManagerResource.GetString('Selected')}" Visibility="{x:Bind IsEnabled, Mode=OneWay}" />
                                                            <TextBlock Text="{x:Bind rootservice:ResourceService.ContextMenuManagerResource.GetString('UnSelected')}" Visibility="{x:Bind converter:ValueConverterHelper.BooleanToVisibilityReverseConvert(IsEnabled), Mode=OneWay}" />
                                                        </Grid>
                                                    </ToolTip>
                                                </ToolTipService.ToolTip>
                                            </CheckBox>

                                            <TextBlock
                                                Grid.Column="1"
                                                VerticalAlignment="Center"
                                                Text="{x:Bind Clsid.ToString()}" />
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </muxc:Expander.Content>
                    </muxc:Expander>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </Grid>
</Page>
