<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppInformation" xml:space="preserve">
    <value>查看应用信息</value>
  </data>
  <data name="AppSettings" xml:space="preserve">
    <value>打开应用设置</value>
  </data>
  <data name="AppVersion" xml:space="preserve">
    <value>应用版本：{0}.{1}.{2}.{3}</value>
  </data>
  <data name="Backdrop" xml:space="preserve">
    <value>背景色设置说明</value>
  </data>
  <data name="BackdropDescription" xml:space="preserve">
    <value>Windows 10系统（版本号低于22621）不支持设置背景色</value>
  </data>
  <data name="BriefIntroduction" xml:space="preserve">
    <value>应用简介</value>
  </data>
  <data name="CheckUpdate" xml:space="preserve">
    <value>检查更新</value>
  </data>
  <data name="Developer" xml:space="preserve">
    <value>开发者：</value>
  </data>
  <data name="DeveloperName" xml:space="preserve">
    <value>@高怡飞</value>
  </data>
  <data name="DeveloperNameToolTip" xml:space="preserve">
    <value>单击访问开发者主页</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>界面语言设置说明</value>
  </data>
  <data name="LanguageDescription" xml:space="preserve">
    <value>"开始"菜单应用的名称并不会跟随应用语言设置发生改变。请在设置中找到应用点击修复按钮，应用名称随即发生改变，这不会清除您应用的数据。</value>
  </data>
  <data name="Precaution" xml:space="preserve">
    <value>注意事项</value>
  </data>
  <data name="ProjectHomePage" xml:space="preserve">
    <value>项目主页</value>
  </data>
  <data name="QuickOperation" xml:space="preserve">
    <value>快捷操作</value>
  </data>
  <data name="Reference" xml:space="preserve">
    <value>项目引用</value>
  </data>
  <data name="ReferenceTitle" xml:space="preserve">
    <value>项目引用（按英文首字母排序）</value>
  </data>
  <data name="ReferenceToolTip" xml:space="preserve">
    <value>单击了解被引用开源项目的信息</value>
  </data>
  <data name="SendFeedback" xml:space="preserve">
    <value>发送反馈</value>
  </data>
  <data name="SettingsHelp" xml:space="preserve">
    <value>设置选项说明</value>
  </data>
  <data name="SystemInformation" xml:space="preserve">
    <value>查看系统信息</value>
  </data>
  <data name="Thanks" xml:space="preserve">
    <value>感谢</value>
  </data>
  <data name="ThanksTitle" xml:space="preserve">
    <value>感谢（按英文首字母排序）</value>
  </data>
  <data name="ThanksToolTip" xml:space="preserve">
    <value>单击了解该感谢者的个人信息</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>关于</value>
  </data>
  <data name="UpdateAndLicensing" xml:space="preserve">
    <value>更新和许可</value>
  </data>
  <data name="UseInstruction" xml:space="preserve">
    <value>使用说明</value>
  </data>
</root>