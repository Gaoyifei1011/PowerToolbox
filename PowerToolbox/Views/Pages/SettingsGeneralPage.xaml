<Page
    x:Class="PowerToolbox.Views.Pages.SettingsGeneralPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:backdrophelper="using:PowerToolbox.Helpers.Backdrop"
    xmlns:class="using:PowerToolbox.Extensions.DataType.Class"
    xmlns:converter="using:PowerToolbox.Helpers.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="using:PowerToolbox.Models"
    xmlns:rootservice="using:PowerToolbox.Services.Root"
    xmlns:system="using:System"
    xmlns:systembackdrop="using:Microsoft.UI.Composition.SystemBackdrops"
    NavigationCacheMode="Enabled"
    mc:Ignorable="d">

    <Page.Resources>
        <class:ExecuteCommand x:Name="LanguageCommand" ExecuteRequested="{x:Bind OnLanguageExecuteRequested}" />
    </Page.Resources>

    <ScrollViewer
        HorizontalScrollBarVisibility="Disabled"
        HorizontalScrollMode="Disabled"
        VerticalScrollBarVisibility="Auto"
        VerticalScrollMode="Enabled">

        <Grid Margin="30,0,30,30">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!--  应用主题设置  -->
            <Grid
                Grid.Row="0"
                Height="60"
                Margin="0,0,0,2"
                Padding="16,0"
                Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                BorderThickness="1"
                CornerRadius="{StaticResource ControlCornerRadius}">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <FontIcon
                    Grid.Column="0"
                    Margin="0,0,12,0"
                    FontSize="16"
                    Glyph="&#xE790;" />

                <StackPanel
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Orientation="Vertical">

                    <TextBlock Style="{StaticResource BodyTextBlockStyle}" Text="{x:Bind rootservice:ResourceService.SettingsGeneralResource.GetString('ThemeMode')}" />

                    <TextBlock
                        x:Name="ThemeModeDescription"
                        Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                        Style="{StaticResource CaptionTextBlockStyle}"
                        Text="{x:Bind rootservice:ResourceService.SettingsGeneralResource.GetString('ThemeModeDescription')}"
                        TextTrimming="CharacterEllipsis"
                        TextWrapping="NoWrap">

                        <ToolTipService.ToolTip>
                            <ToolTip
                                MaxWidth="9999"
                                Content="{x:Bind rootservice:ResourceService.SettingsGeneralResource.GetString('ThemeModeDescription')}"
                                Loaded="{x:Bind backdrophelper:ToolTipBackdropHelper.OnLoaded}"
                                Visibility="{x:Bind ThemeModeDescription.IsTextTrimmed, Mode=OneWay}" />
                        </ToolTipService.ToolTip>
                    </TextBlock>
                </StackPanel>

                <HyperlinkButton
                    Grid.Column="2"
                    Margin="0,0,6,0"
                    Click="{x:Bind OnSystemThemeSettingsClicked}"
                    Content="{x:Bind rootservice:ResourceService.SettingsGeneralResource.GetString('SystemThemeSettings')}" />

                <DropDownButton
                    Grid.Column="3"
                    VerticalAlignment="Center"
                    Content="{x:Bind Theme.Value, Mode=OneWay}">

                    <DropDownButton.Flyout>
                        <MenuFlyout Placement="Bottom">
                            <RadioMenuFlyoutItem
                                Click="{x:Bind OnThemeSelectClicked}"
                                GroupName="ThemeRadioGroup"
                                IsChecked="{x:Bind x:Object.Equals(Theme.Key, ThemeList[0].Key), Mode=OneWay}"
                                Tag="{x:Bind ThemeList[0]}"
                                Text="{x:Bind system:Convert.ToString(ThemeList[0].Value)}" />

                            <RadioMenuFlyoutItem
                                Click="{x:Bind OnThemeSelectClicked}"
                                GroupName="ThemeRadioGroup"
                                IsChecked="{x:Bind x:Object.Equals(Theme.Key, ThemeList[1].Key), Mode=OneWay}"
                                Tag="{x:Bind ThemeList[1]}"
                                Text="{x:Bind system:Convert.ToString(ThemeList[1].Value)}" />

                            <RadioMenuFlyoutItem
                                Click="{x:Bind OnThemeSelectClicked}"
                                GroupName="ThemeRadioGroup"
                                IsChecked="{x:Bind x:Object.Equals(Theme.Key, ThemeList[2].Key), Mode=OneWay}"
                                Tag="{x:Bind ThemeList[2]}"
                                Text="{x:Bind system:Convert.ToString(ThemeList[2].Value)}" />
                        </MenuFlyout>
                    </DropDownButton.Flyout>
                </DropDownButton>
            </Grid>

            <!--  窗口背景材质设置  -->
            <Grid
                Grid.Row="1"
                Height="60"
                Margin="0,0,0,2"
                Padding="16,0"
                Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                BorderThickness="1"
                CornerRadius="{StaticResource ControlCornerRadius}">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <FontIcon
                    Grid.Column="0"
                    Margin="0,0,12,0"
                    FontSize="16"
                    Glyph="&#xE771;" />

                <StackPanel
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Orientation="Vertical">

                    <TextBlock Style="{StaticResource BodyTextBlockStyle}" Text="{x:Bind rootservice:ResourceService.SettingsGeneralResource.GetString('Backdrop')}" />

                    <TextBlock
                        x:Name="BackdropDescription"
                        Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                        Style="{StaticResource CaptionTextBlockStyle}"
                        Text="{x:Bind rootservice:ResourceService.SettingsGeneralResource.GetString('BackdropDescription')}"
                        TextTrimming="CharacterEllipsis"
                        TextWrapping="NoWrap">

                        <ToolTipService.ToolTip>
                            <ToolTip
                                MaxWidth="9999"
                                Content="{x:Bind rootservice:ResourceService.SettingsGeneralResource.GetString('BackdropDescription')}"
                                Loaded="{x:Bind backdrophelper:ToolTipBackdropHelper.OnLoaded}"
                                Visibility="{x:Bind BackdropDescription.IsTextTrimmed, Mode=OneWay}" />
                        </ToolTipService.ToolTip>
                    </TextBlock>
                </StackPanel>

                <HyperlinkButton
                    Grid.Column="2"
                    Margin="0,0,6,0"
                    Click="{x:Bind OnSystemBackdropSettingsClicked}"
                    Content="{x:Bind rootservice:ResourceService.SettingsGeneralResource.GetString('SystemBackdropSettings')}" />

                <DropDownButton
                    Grid.Column="3"
                    VerticalAlignment="Center"
                    Content="{x:Bind LocalizeDisplayNumber(Backdrop), Mode=OneWay}"
                    IsEnabled="{x:Bind AdvancedEffectsEnabled, Mode=OneWay}">

                    <DropDownButton.Flyout>
                        <MenuFlyout Placement="Bottom">
                            <RadioMenuFlyoutItem
                                Click="{x:Bind OnBackdropSelectClicked}"
                                GroupName="BackdropRadioGroup"
                                IsChecked="{x:Bind x:Object.Equals(Backdrop.Key, BackdropList[0].Key), Mode=OneWay}"
                                Tag="{x:Bind BackdropList[0]}"
                                Text="{x:Bind system:Convert.ToString(BackdropList[0].Value)}" />

                            <MenuFlyoutSubItem
                                x:Name="MicaFlyoutItem"
                                x:Load="{x:Bind systembackdrop:MicaController.IsSupported()}"
                                Text="{x:Bind rootservice:ResourceService.SettingsGeneralResource.GetString('Mica')}">

                                <RadioMenuFlyoutItem
                                    Click="{x:Bind OnBackdropSelectClicked}"
                                    GroupName="BackdropRadioGroup"
                                    IsChecked="{x:Bind x:Object.Equals(Backdrop.Key, BackdropList[1].Key), Mode=OneWay}"
                                    Tag="{x:Bind BackdropList[1]}"
                                    Text="{x:Bind system:Convert.ToString(BackdropList[1].Value)}" />

                                <RadioMenuFlyoutItem
                                    Click="{x:Bind OnBackdropSelectClicked}"
                                    GroupName="BackdropRadioGroup"
                                    IsChecked="{x:Bind x:Object.Equals(Backdrop.Key, BackdropList[2].Key), Mode=OneWay}"
                                    Tag="{x:Bind BackdropList[2]}"
                                    Text="{x:Bind system:Convert.ToString(BackdropList[2].Value)}" />
                            </MenuFlyoutSubItem>

                            <MenuFlyoutSubItem
                                x:Name="DesktopAcrylicFlyoutItem"
                                x:Load="{x:Bind systembackdrop:DesktopAcrylicController.IsSupported()}"
                                Text="{x:Bind rootservice:ResourceService.SettingsGeneralResource.GetString('DesktopAcrylic')}">

                                <RadioMenuFlyoutItem
                                    Click="{x:Bind OnBackdropSelectClicked}"
                                    GroupName="BackdropRadioGroup"
                                    IsChecked="{x:Bind x:Object.Equals(Backdrop.Key, BackdropList[3].Key), Mode=OneWay}"
                                    Tag="{x:Bind BackdropList[3]}"
                                    Text="{x:Bind system:Convert.ToString(BackdropList[3].Value)}" />

                                <RadioMenuFlyoutItem
                                    Click="{x:Bind OnBackdropSelectClicked}"
                                    GroupName="BackdropRadioGroup"
                                    IsChecked="{x:Bind x:Object.Equals(Backdrop.Key, BackdropList[4].Key), Mode=OneWay}"
                                    Tag="{x:Bind BackdropList[4]}"
                                    Text="{x:Bind system:Convert.ToString(BackdropList[4].Value)}" />

                                <RadioMenuFlyoutItem
                                    Click="{x:Bind OnBackdropSelectClicked}"
                                    GroupName="BackdropRadioGroup"
                                    IsChecked="{x:Bind x:Object.Equals(Backdrop.Key, BackdropList[5].Key), Mode=OneWay}"
                                    Tag="{x:Bind BackdropList[5]}"
                                    Text="{x:Bind system:Convert.ToString(BackdropList[5].Value)}" />
                            </MenuFlyoutSubItem>
                        </MenuFlyout>
                    </DropDownButton.Flyout>
                </DropDownButton>
            </Grid>

            <!--  始终显示背景色设置  -->
            <Grid
                Grid.Row="2"
                Height="60"
                Margin="0,0,0,2"
                Padding="16,0"
                Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                BorderThickness="1"
                CornerRadius="{StaticResource ControlCornerRadius}">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <FontIcon
                    Grid.Column="0"
                    Margin="0,0,12,0"
                    FontFamily="{ThemeResource SymbolThemeFontFamily}"
                    FontSize="16"
                    Glyph="&#xE81E;" />

                <StackPanel
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Orientation="Vertical">

                    <TextBlock Style="{StaticResource BodyTextBlockStyle}" Text="{x:Bind rootservice:ResourceService.SettingsGeneralResource.GetString('AlwaysShowBackdrop')}" />

                    <TextBlock
                        x:Name="AlwaysShowBackdropDescription"
                        Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                        Style="{StaticResource CaptionTextBlockStyle}"
                        Text="{x:Bind rootservice:ResourceService.SettingsGeneralResource.GetString('AlwaysShowBackdropDescription')}"
                        TextTrimming="CharacterEllipsis"
                        TextWrapping="NoWrap">

                        <ToolTipService.ToolTip>
                            <ToolTip
                                MaxWidth="9999"
                                Content="{x:Bind rootservice:ResourceService.SettingsGeneralResource.GetString('AlwaysShowBackdropDescription')}"
                                Loaded="{x:Bind backdrophelper:ToolTipBackdropHelper.OnLoaded}"
                                Visibility="{x:Bind AlwaysShowBackdropDescription.IsTextTrimmed, Mode=OneWay}" />
                        </ToolTipService.ToolTip>
                    </TextBlock>
                </StackPanel>

                <StackPanel
                    Grid.Column="2"
                    VerticalAlignment="Center"
                    Orientation="Horizontal">

                    <TextBlock
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Text="{x:Bind rootservice:ResourceService.SettingsGeneralResource.GetString('AlwaysShowBackdropOffContent')}"
                        Visibility="{x:Bind converter:ValueConverterHelper.BooleanToVisibilityReverseConvert(AlwaysShowBackdropValue), Mode=OneWay}" />

                    <TextBlock
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Text="{x:Bind rootservice:ResourceService.SettingsGeneralResource.GetString('AlwaysShowBackdropOnContent')}"
                        Visibility="{x:Bind AlwaysShowBackdropValue, Mode=OneWay}" />

                    <ToggleSwitch
                        MinWidth="0"
                        Margin="10,-2,-10,0"
                        IsEnabled="{x:Bind AlwaysShowBackdropEnabled, Mode=OneWay}"
                        IsOn="{x:Bind AlwaysShowBackdropValue, Mode=OneWay}"
                        OffContent=""
                        OnContent=""
                        Toggled="{x:Bind OnAlwaysShowBackdropToggled}" />
                </StackPanel>
            </Grid>

            <!--  界面语言设置  -->
            <Grid
                Grid.Row="3"
                Height="60"
                Margin="0,0,0,2"
                Padding="16,0"
                Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                BorderThickness="1"
                CornerRadius="{StaticResource ControlCornerRadius}">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <FontIcon
                    Grid.Column="0"
                    Margin="0,0,12,0"
                    FontSize="16"
                    Glyph="&#xF2B7;" />

                <StackPanel
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Orientation="Vertical">

                    <TextBlock Style="{StaticResource BodyTextBlockStyle}" Text="{x:Bind rootservice:ResourceService.SettingsGeneralResource.GetString('Language')}" />

                    <TextBlock
                        x:Name="LanguageDescription"
                        Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                        Style="{StaticResource CaptionTextBlockStyle}"
                        Text="{x:Bind rootservice:ResourceService.SettingsGeneralResource.GetString('LanguageDescription')}"
                        TextTrimming="CharacterEllipsis"
                        TextWrapping="NoWrap">

                        <ToolTipService.ToolTip>
                            <ToolTip
                                MaxWidth="9999"
                                Content="{x:Bind rootservice:ResourceService.SettingsGeneralResource.GetString('LanguageDescription')}"
                                Loaded="{x:Bind backdrophelper:ToolTipBackdropHelper.OnLoaded}"
                                Visibility="{x:Bind LanguageDescription.IsTextTrimmed, Mode=OneWay}" />
                        </ToolTipService.ToolTip>
                    </TextBlock>
                </StackPanel>

                <HyperlinkButton
                    Grid.Column="2"
                    Margin="0,0,6,0"
                    VerticalAlignment="Center"
                    Click="{x:Bind OnSystemLanguageSettingsClicked}"
                    Content="{x:Bind rootservice:ResourceService.SettingsGeneralResource.GetString('SystemLanguageSettings')}" />

                <DropDownButton
                    Grid.Column="3"
                    VerticalAlignment="Center"
                    Content="{x:Bind AppLanguage.Value, Mode=OneWay}">

                    <DropDownButton.Flyout>
                        <Flyout
                            x:Name="LanguageFlyout"
                            Opened="{x:Bind OnOpened}"
                            Placement="Bottom"
                            ShouldConstrainToRootBounds="False"
                            SystemBackdrop="{StaticResource AcrylicBackgroundFillColorDefaultBackdrop}">

                            <Flyout.FlyoutPresenterStyle>
                                <Style BasedOn="{StaticResource DefaultFlyoutPresenterStyle}" TargetType="FlyoutPresenter">
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="MinHeight" Value="0" />
                                    <Setter Property="Background" Value="Transparent" />
                                </Style>
                            </Flyout.FlyoutPresenterStyle>

                            <ListView
                                x:Name="LanguageListView"
                                MaxHeight="300"
                                Background="Transparent"
                                ItemsSource="{x:Bind LanguageCollection}"
                                SelectionMode="None">

                                <ListView.ItemContainerStyle>
                                    <Style BasedOn="{StaticResource DefaultListViewItemStyle}" TargetType="ListViewItem">
                                        <Setter Property="Padding" Value="0" />
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                        <Setter Property="Margin" Value="0,1" />
                                        <Setter Property="MinHeight" Value="0 " />
                                    </Style>
                                </ListView.ItemContainerStyle>

                                <ItemsControl.ItemContainerTransitions>
                                    <TransitionCollection />
                                </ItemsControl.ItemContainerTransitions>

                                <ListView.ItemTemplate>
                                    <DataTemplate x:DataType="model:LanguageModel">
                                        <RadioMenuFlyoutItem
                                            Height="32"
                                            Padding="11,0"
                                            Command="{StaticResource LanguageCommand}"
                                            CommandParameter="{x:Bind}"
                                            GroupName="LanguageRadioGroup"
                                            IsChecked="{x:Bind IsChecked, Mode=OneWay}"
                                            Text="{x:Bind system:Convert.ToString(LangaugeInfo.Value)}" />
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </Flyout>
                    </DropDownButton.Flyout>
                </DropDownButton>
            </Grid>

            <!--  窗口置顶设置  -->
            <Grid
                Grid.Row="4"
                Height="60"
                Padding="16,0"
                Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                BorderThickness="1"
                CornerRadius="{StaticResource ControlCornerRadius}">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <FontIcon
                    Grid.Column="0"
                    Margin="0,0,12,0"
                    FontFamily="{ThemeResource SymbolThemeFontFamily}"
                    FontSize="16"
                    Glyph="&#xE840;" />

                <StackPanel
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Orientation="Vertical">

                    <TextBlock Style="{StaticResource BodyTextBlockStyle}" Text="{x:Bind rootservice:ResourceService.SettingsGeneralResource.GetString('TopMost')}" />

                    <TextBlock
                        x:Name="TopMostDescription"
                        Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                        Style="{StaticResource CaptionTextBlockStyle}"
                        Text="{x:Bind rootservice:ResourceService.SettingsGeneralResource.GetString('TopMostDescription')}"
                        TextTrimming="CharacterEllipsis"
                        TextWrapping="NoWrap">

                        <ToolTipService.ToolTip>
                            <ToolTip
                                MaxWidth="9999"
                                Content="{x:Bind rootservice:ResourceService.SettingsGeneralResource.GetString('TopMostDescription')}"
                                Loaded="{x:Bind backdrophelper:ToolTipBackdropHelper.OnLoaded}"
                                Visibility="{x:Bind TopMostDescription.IsTextTrimmed, Mode=OneWay}" />
                        </ToolTipService.ToolTip>
                    </TextBlock>
                </StackPanel>

                <StackPanel
                    Grid.Column="2"
                    VerticalAlignment="Center"
                    Orientation="Horizontal">

                    <TextBlock
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Text="{x:Bind rootservice:ResourceService.SettingsGeneralResource.GetString('TopMostOffContent')}"
                        Visibility="{x:Bind converter:ValueConverterHelper.BooleanToVisibilityReverseConvert(TopMostValue), Mode=OneWay}" />

                    <TextBlock
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Text="{x:Bind rootservice:ResourceService.SettingsGeneralResource.GetString('TopMostOnContent')}"
                        Visibility="{x:Bind TopMostValue, Mode=OneWay}" />

                    <ToggleSwitch
                        MinWidth="0"
                        Margin="10,-2,-10,0"
                        IsOn="{x:Bind TopMostValue, Mode=OneWay}"
                        OffContent=""
                        OnContent=""
                        Toggled="{x:Bind OnTopMostToggled}" />
                </StackPanel>
            </Grid>
        </Grid>
    </ScrollViewer>
</Page>
