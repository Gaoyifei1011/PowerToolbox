<Page
    x:Class="PowerToolbox.Views.Pages.ScheduledTaskManagerPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:class="using:PowerToolbox.Extensions.DataType.Class"
    xmlns:controls="using:Microsoft.UI.Xaml.Controls"
    xmlns:converter="using:PowerToolbox.Helpers.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:enum="using:PowerToolbox.Extensions.DataType.Enums"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="using:PowerToolbox.Models"
    xmlns:rootservice="using:PowerToolbox.Services.Root"
    NavigationCacheMode="Enabled"
    mc:Ignorable="d">

    <Page.Resources>
        <class:ExecuteCommand x:Name="CheckBoxClickCommand" ExecuteRequested="{x:Bind OnCheckBoxExecuteRequested}" />
        <class:ExecuteCommand x:Name="DisableScheduledTaskCommand" ExecuteRequested="{x:Bind OnDisableScheduledTaskExecuteRequested}" />
        <class:ExecuteCommand x:Name="EnableScheduledTaskCommand" ExecuteRequested="{x:Bind OnEnableScheduledTaskExecuteRequested}" />
        <class:ExecuteCommand x:Name="RunScheduledTaskCommand" ExecuteRequested="{x:Bind OnRunScheduledTaskExecuteRequested}" />
        <class:ExecuteCommand x:Name="StopScheduledTaskCommand" ExecuteRequested="{x:Bind OnStopScheduledTaskExecuteRequested}" />
        <class:ExecuteCommand x:Name="ExportScheduledTaskCommand" ExecuteRequested="{x:Bind OnExportScheduledTaskExecuteRequested}" />
        <class:ExecuteCommand x:Name="DeleteScheduledTaskCommand" ExecuteRequested="{x:Bind OnDeleteScheduledTaskExecuteRequested}" />
        <class:ExecuteCommand x:Name="OpenProcessPathCommand" ExecuteRequested="{x:Bind OnOpenProcessPathExecuteRequested}" />
    </Page.Resources>

    <SplitView
        x:Name="ScheduledTaskSplitView"
        DisplayMode="Overlay"
        PaneBackground="Transparent"
        PanePlacement="Right">

        <SplitView.Content>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <StackPanel
                    Grid.Row="0"
                    Margin="30,15,30,0"
                    Orientation="Horizontal"
                    Spacing="5">

                    <TextBlock
                        HorizontalAlignment="Left"
                        FontSize="22"
                        Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('ScheduledTaskManager')}" />

                    <TextBlock VerticalAlignment="Bottom" Text="{x:Bind ScheduledTaskDescription, Mode=OneWay}" />
                </StackPanel>

                <!--  驱动管理控制栏  -->
                <Grid
                    Grid.Row="1"
                    Height="60"
                    Margin="30,5,30,3"
                    Padding="12,0,0,0"
                    Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                    BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                    BorderThickness="1"
                    CornerRadius="{StaticResource ControlCornerRadius}">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <AutoSuggestBox
                        Grid.Column="0"
                        Margin="0,0,2,0"
                        VerticalAlignment="Center"
                        IsEnabled="{x:Bind GetIsLoadingOrOperating(ScheduledTaskResultKind), Mode=OneWay}"
                        PlaceholderText="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('SearchScheduledTaskPHText')}"
                        QueryIcon="Find"
                        QuerySubmitted="{x:Bind OnQuerySubmitted}"
                        Text="{x:Bind SearchText, Mode=OneWay}"
                        TextChanged="{x:Bind OnTextChanged}" />

                    <CommandBar
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        DefaultLabelPosition="Right">

                        <CommandBar.PrimaryCommands>
                            <AppBarButton
                                Click="{x:Bind OnSelectAllClicked}"
                                IsEnabled="{x:Bind GetIsLoadingOrOperating(ScheduledTaskResultKind), Mode=OneWay}"
                                Label="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('SelectAll')}">
                                <AppBarButton.Icon>
                                    <FontIcon Glyph="&#xE8B3;" />
                                </AppBarButton.Icon>
                            </AppBarButton>

                            <AppBarButton
                                Click="{x:Bind OnSelectNoneClicked}"
                                IsEnabled="{x:Bind GetIsLoadingOrOperating(ScheduledTaskResultKind), Mode=OneWay}"
                                Label="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('SelectNone')}">

                                <AppBarButton.Icon>
                                    <FontIcon Glyph="&#xE8E6;" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                        </CommandBar.PrimaryCommands>
                    </CommandBar>

                    <Button
                        Grid.Column="2"
                        MinHeight="{ThemeResource AppBarThemeCompactHeight}"
                        Margin="-6,0,0,0"
                        Padding="{ThemeResource CommandBarMoreButtonMargin}"
                        VerticalAlignment="Center"
                        Foreground="{ThemeResource CommandBarForeground}"
                        IsAccessKeyScope="True"
                        Style="{ThemeResource EllipsisButton}">

                        <Button.Content>
                            <FontIcon
                                Height="{ThemeResource AppBarExpandButtonCircleDiameter}"
                                VerticalAlignment="Center"
                                FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                FontSize="20"
                                Glyph="&#xE712;" />
                        </Button.Content>

                        <Button.Flyout>
                            <MenuFlyout Placement="Bottom">
                                <MenuFlyoutItem
                                    Click="{x:Bind OnRunScheduledTaskClicked}"
                                    IsEnabled="{x:Bind GetIsLoadingOrOperating(ScheduledTaskResultKind), Mode=OneWay}"
                                    Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('RunScheduledTask')}">

                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE768;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutItem
                                    Click="{x:Bind OnStopScheduledTaskClicked}"
                                    IsEnabled="{x:Bind GetIsLoadingOrOperating(ScheduledTaskResultKind), Mode=OneWay}"
                                    Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('StopScheduledTask')}">

                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE71A;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutItem
                                    Click="{x:Bind OnExportScheduledTaskClicked}"
                                    IsEnabled="{x:Bind GetIsLoadingOrOperating(ScheduledTaskResultKind), Mode=OneWay}"
                                    Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('ExportScheduledTask')}">

                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE74E;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutSeparator />

                                <MenuFlyoutItem
                                    Click="{x:Bind OnRefreshClicked}"
                                    IsEnabled="{x:Bind GetIsLoadingOrOperating(ScheduledTaskResultKind), Mode=OneWay}"
                                    Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('Refresh')}">

                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE72C;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutSeparator />

                                <MenuFlyoutItem
                                    Click="{x:Bind OnViewErrorInformationClicked}"
                                    IsEnabled="{x:Bind IsModifiedFailed, Mode=OneWay}"
                                    Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('ViewErrorInformation')}">

                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xEA39;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutSeparator />

                                <MenuFlyoutItem Click="{x:Bind OnUseInstructionClicked}" Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('UseInstruction')}">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE946;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutItem Click="{x:Bind OnOpenScheduledTaskProgramClicked}" Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('OpenScheduledTaskProgram')}">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xED5A;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                            </MenuFlyout>
                        </Button.Flyout>

                        <ToolTipService.ToolTip>
                            <ToolTip MaxWidth="9999" Content="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('ViewMore')}" />
                        </ToolTipService.ToolTip>
                    </Button>
                </Grid>

                <!--  计划任务管理状态显示栏  -->
                <Grid
                    Grid.Row="2"
                    Height="60"
                    Margin="30,0,30,0"
                    Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                    BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                    BorderThickness="1"
                    CornerRadius="{StaticResource ControlCornerRadius}"
                    Visibility="{x:Bind GetScheduledTaskSuccessfullyState(ScheduledTaskResultKind, x:False), Mode=OneWay}">

                    <!--  正在加载中  -->
                    <StackPanel
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Orientation="Horizontal"
                        Spacing="10"
                        Visibility="{x:Bind CheckScheduledTaskState(ScheduledTaskResultKind, enum:ScheduledTaskResultKind.Loading), Mode=OneWay}">

                        <controls:ProgressRing IsActive="True" IsEnabled="True" />

                        <TextBlock
                            VerticalAlignment="Center"
                            Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('LoadingScheduledTask')}"
                            TextAlignment="Center" />
                    </StackPanel>

                    <!--  加载失败（包含搜索结果为空）  -->
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Text="{x:Bind ScheduledTaskFailedContent, Mode=OneWay}"
                        TextAlignment="Center"
                        Visibility="{x:Bind CheckScheduledTaskState(ScheduledTaskResultKind, enum:ScheduledTaskResultKind.Failed), Mode=OneWay}" />
                </Grid>

                <!--  网络回环管理结果展示项目控件  -->
                <ListView
                    Grid.Row="3"
                    Padding="30,0,30,30"
                    ItemsSource="{x:Bind ScheduledTaskCollection}"
                    SelectionMode="None"
                    Visibility="{x:Bind GetScheduledTaskSuccessfullyState(ScheduledTaskResultKind, x:True), Mode=OneWay}">

                    <ListView.ItemContainerStyle>
                        <Style BasedOn="{StaticResource DefaultListViewItemStyle}" TargetType="ListViewItem">
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="Margin" Value="0" />
                            <Setter Property="MinHeight" Value="0 " />
                        </Style>
                    </ListView.ItemContainerStyle>

                    <ItemsControl.ItemContainerTransitions>
                        <TransitionCollection />
                    </ItemsControl.ItemContainerTransitions>

                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="model:ScheduledTaskModel">
                            <controls:Expander
                                Margin="0,0,0,2"
                                HorizontalAlignment="Stretch"
                                HorizontalContentAlignment="Stretch"
                                Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                                IsExpanded="False">

                                <controls:Expander.Header>
                                    <Grid Height="60">

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <CheckBox
                                            Grid.Column="0"
                                            MinWidth="0"
                                            Margin="0,0,12,0"
                                            Command="{StaticResource CheckBoxClickCommand}"
                                            IsChecked="{x:Bind IsSelected, Mode=TwoWay}">

                                            <ToolTipService.ToolTip>
                                                <ToolTip MaxWidth="9999">
                                                    <Grid>
                                                        <TextBlock Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('Selected')}" Visibility="{x:Bind IsSelected, Mode=OneWay}" />
                                                        <TextBlock Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('UnSelected')}" Visibility="{x:Bind converter:ValueConverterHelper.BooleanToVisibilityReverseConvert(IsSelected), Mode=OneWay}" />
                                                    </Grid>
                                                </ToolTip>
                                            </ToolTipService.ToolTip>
                                        </CheckBox>

                                        <Grid
                                            Grid.Column="1"
                                            Width="30"
                                            Height="30"
                                            Margin="0,0,12,0"
                                            Padding="2"
                                            Background="{ThemeResource SolidBackgroundFillColorSecondaryBrush}"
                                            BorderBrush="{ThemeResource SurfaceStrokeColorDefaultBrush}"
                                            BorderThickness="1"
                                            CornerRadius="{StaticResource ControlCornerRadius}">
                                            <controls:ImageIcon Source="{x:Bind TaskIcon}" />
                                        </Grid>

                                        <StackPanel
                                            Grid.Column="2"
                                            Margin="0,10"
                                            VerticalAlignment="Center"
                                            Orientation="Vertical">

                                            <TextBlock
                                                x:Name="NameText"
                                                HorizontalAlignment="Left"
                                                IsTextSelectionEnabled="True"
                                                Style="{StaticResource BodyTextBlockStyle}"
                                                Text="{x:Bind Name}"
                                                TextTrimming="CharacterEllipsis"
                                                TextWrapping="NoWrap">

                                                <ToolTipService.ToolTip>
                                                    <ToolTip
                                                        MaxWidth="9999"
                                                        Content="{x:Bind Name}"
                                                        Visibility="{Binding ElementName=NameText, Path=IsTextTrimmed, Mode=OneWay}" />
                                                </ToolTipService.ToolTip>
                                            </TextBlock>

                                            <TextBlock
                                                x:Name="DescriptionText"
                                                HorizontalAlignment="Left"
                                                Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                                IsTextSelectionEnabled="True"
                                                Style="{StaticResource CaptionTextBlockStyle}"
                                                Text="{x:Bind Description}"
                                                TextTrimming="CharacterEllipsis"
                                                TextWrapping="NoWrap">

                                                <ToolTipService.ToolTip>
                                                    <ToolTip
                                                        MaxWidth="9999"
                                                        Content="{x:Bind Description}"
                                                        Visibility="{Binding ElementName=DescriptionText, Path=IsTextTrimmed, Mode=OneWay}" />
                                                </ToolTipService.ToolTip>
                                            </TextBlock>
                                        </StackPanel>

                                        <controls:SplitButton
                                            Grid.Column="3"
                                            Margin="5,0,0,0"
                                            Command="{StaticResource DisableScheduledTaskCommand}"
                                            CommandParameter="{x:Bind}"
                                            Content="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('Disable')}"
                                            CornerRadius="{StaticResource ControlCornerRadius}"
                                            IsEnabled="{x:Bind converter:ValueConverterHelper.BooleanReverseConvert(IsProcessing), Mode=OneWay}"
                                            Visibility="{x:Bind IsEnabled, Mode=OneWay}">

                                            <ToolTipService.ToolTip>
                                                <ToolTip MaxWidth="9999" Content="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('Disable')}" />
                                            </ToolTipService.ToolTip>

                                            <controls:SplitButton.Flyout>
                                                <MenuFlyout Placement="Bottom">
                                                    <MenuFlyoutItem
                                                        Command="{StaticResource RunScheduledTaskCommand}"
                                                        CommandParameter="{x:Bind}"
                                                        Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('RunScheduledTask')}">

                                                        <MenuFlyoutItem.Icon>
                                                            <FontIcon Glyph="&#xE768;" />
                                                        </MenuFlyoutItem.Icon>
                                                    </MenuFlyoutItem>

                                                    <MenuFlyoutItem
                                                        Command="{StaticResource StopScheduledTaskCommand}"
                                                        CommandParameter="{x:Bind}"
                                                        Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('StopScheduledTask')}">

                                                        <MenuFlyoutItem.Icon>
                                                            <FontIcon Glyph="&#xE71A;" />
                                                        </MenuFlyoutItem.Icon>
                                                    </MenuFlyoutItem>

                                                    <MenuFlyoutItem
                                                        Command="{StaticResource ExportScheduledTaskCommand}"
                                                        CommandParameter="{x:Bind}"
                                                        Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('ExportScheduledTask')}">

                                                        <MenuFlyoutItem.Icon>
                                                            <FontIcon Glyph="&#xE74E;" />
                                                        </MenuFlyoutItem.Icon>
                                                    </MenuFlyoutItem>

                                                    <MenuFlyoutItem
                                                        Command="{StaticResource DeleteScheduledTaskCommand}"
                                                        CommandParameter="{x:Bind}"
                                                        Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('DeleteScheduledTask')}">

                                                        <MenuFlyoutItem.Icon>
                                                            <FontIcon Glyph="&#xE74D;" />
                                                        </MenuFlyoutItem.Icon>
                                                    </MenuFlyoutItem>

                                                    <MenuFlyoutSeparator />

                                                    <MenuFlyoutItem
                                                        Command="{StaticResource OpenProcessPathCommand}"
                                                        CommandParameter="{x:Bind ProcessPath}"
                                                        Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('OpenProcessPath')}">

                                                        <MenuFlyoutItem.Icon>
                                                            <FontIcon Glyph="&#xE7AC;" />
                                                        </MenuFlyoutItem.Icon>
                                                    </MenuFlyoutItem>
                                                </MenuFlyout>
                                            </controls:SplitButton.Flyout>
                                        </controls:SplitButton>

                                        <controls:SplitButton
                                            Grid.Column="3"
                                            Margin="5,0,0,0"
                                            Command="{StaticResource EnableScheduledTaskCommand}"
                                            CommandParameter="{x:Bind}"
                                            Content="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('Enable')}"
                                            CornerRadius="{StaticResource ControlCornerRadius}"
                                            IsEnabled="{x:Bind converter:ValueConverterHelper.BooleanReverseConvert(IsProcessing), Mode=OneWay}"
                                            Visibility="{x:Bind converter:ValueConverterHelper.BooleanToVisibilityReverseConvert(IsEnabled), Mode=OneWay}">

                                            <ToolTipService.ToolTip>
                                                <ToolTip MaxWidth="9999" Content="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('Enable')}" />
                                            </ToolTipService.ToolTip>

                                            <controls:SplitButton.Flyout>
                                                <MenuFlyout Placement="Bottom">
                                                    <MenuFlyoutItem
                                                        Command="{StaticResource ExportScheduledTaskCommand}"
                                                        CommandParameter="{x:Bind}"
                                                        Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('ExportScheduledTask')}">

                                                        <MenuFlyoutItem.Icon>
                                                            <FontIcon Glyph="&#xE74E;" />
                                                        </MenuFlyoutItem.Icon>
                                                    </MenuFlyoutItem>

                                                    <MenuFlyoutItem
                                                        Command="{StaticResource DeleteScheduledTaskCommand}"
                                                        CommandParameter="{x:Bind}"
                                                        Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('DeleteScheduledTask')}">

                                                        <MenuFlyoutItem.Icon>
                                                            <FontIcon Glyph="&#xE74D;" />
                                                        </MenuFlyoutItem.Icon>
                                                    </MenuFlyoutItem>

                                                    <MenuFlyoutSeparator />

                                                    <MenuFlyoutItem
                                                        Command="{StaticResource OpenProcessPathCommand}"
                                                        CommandParameter="{x:Bind ProcessPath}"
                                                        Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('OpenProcessPath')}">

                                                        <MenuFlyoutItem.Icon>
                                                            <FontIcon Glyph="&#xE7AC;" />
                                                        </MenuFlyoutItem.Icon>
                                                    </MenuFlyoutItem>
                                                </MenuFlyout>
                                            </controls:SplitButton.Flyout>
                                        </controls:SplitButton>
                                    </Grid>
                                </controls:Expander.Header>

                                <controls:Expander.Content>
                                    <Grid
                                        Margin="40,0,0,0"
                                        ColumnSpacing="15"
                                        RowSpacing="3">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <TextBlock
                                            Grid.Row="0"
                                            Grid.Column="0"
                                            HorizontalAlignment="Left"
                                            FontSize="14"
                                            IsTextSelectionEnabled="True"
                                            Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('Author')}" />

                                        <TextBlock
                                            Grid.Row="0"
                                            Grid.Column="1"
                                            HorizontalAlignment="Left"
                                            FontSize="14"
                                            IsTextSelectionEnabled="True"
                                            Text="{x:Bind Author}"
                                            TextWrapping="Wrap" />

                                        <TextBlock
                                            Grid.Row="1"
                                            Grid.Column="0"
                                            HorizontalAlignment="Left"
                                            FontSize="14"
                                            IsTextSelectionEnabled="True"
                                            Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('Path')}" />

                                        <TextBlock
                                            Grid.Row="1"
                                            Grid.Column="1"
                                            HorizontalAlignment="Left"
                                            FontSize="14"
                                            IsTextSelectionEnabled="True"
                                            Text="{x:Bind Path}"
                                            TextWrapping="Wrap" />

                                        <TextBlock
                                            Grid.Row="2"
                                            Grid.Column="0"
                                            HorizontalAlignment="Left"
                                            FontSize="14"
                                            IsTextSelectionEnabled="True"
                                            Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('State')}" />

                                        <TextBlock
                                            Grid.Row="2"
                                            Grid.Column="1"
                                            HorizontalAlignment="Left"
                                            FontSize="14"
                                            IsTextSelectionEnabled="True"
                                            Text="{x:Bind State, Mode=OneWay}"
                                            TextWrapping="Wrap" />

                                        <TextBlock
                                            Grid.Row="3"
                                            Grid.Column="0"
                                            HorizontalAlignment="Left"
                                            FontSize="14"
                                            IsTextSelectionEnabled="True"
                                            Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('LastRunTime')}" />

                                        <TextBlock
                                            Grid.Row="3"
                                            Grid.Column="1"
                                            HorizontalAlignment="Left"
                                            FontSize="14"
                                            IsTextSelectionEnabled="True"
                                            Text="{x:Bind LastRunTime, Mode=OneWay}"
                                            TextWrapping="Wrap" />

                                        <TextBlock
                                            Grid.Row="4"
                                            Grid.Column="0"
                                            HorizontalAlignment="Left"
                                            FontSize="14"
                                            IsTextSelectionEnabled="True"
                                            Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('LastTaskResult')}" />

                                        <TextBlock
                                            Grid.Row="4"
                                            Grid.Column="1"
                                            HorizontalAlignment="Left"
                                            FontSize="14"
                                            IsTextSelectionEnabled="True"
                                            Text="{x:Bind LastTaskResult, Mode=OneWay}"
                                            TextWrapping="Wrap" />

                                        <TextBlock
                                            Grid.Row="5"
                                            Grid.Column="0"
                                            HorizontalAlignment="Left"
                                            FontSize="14"
                                            IsTextSelectionEnabled="True"
                                            Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('NextRunTime')}" />

                                        <TextBlock
                                            Grid.Row="5"
                                            Grid.Column="1"
                                            HorizontalAlignment="Left"
                                            FontSize="14"
                                            IsTextSelectionEnabled="True"
                                            Text="{x:Bind NextRunTime}"
                                            TextWrapping="Wrap" />

                                        <TextBlock
                                            Grid.Row="6"
                                            Grid.Column="0"
                                            HorizontalAlignment="Left"
                                            FontSize="14"
                                            IsTextSelectionEnabled="True"
                                            Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('ProcessPath')}" />

                                        <TextBlock
                                            Grid.Row="6"
                                            Grid.Column="1"
                                            HorizontalAlignment="Left"
                                            FontSize="14"
                                            IsTextSelectionEnabled="True"
                                            Text="{x:Bind ProcessPath}"
                                            TextWrapping="Wrap" />

                                        <TextBlock
                                            Grid.Row="7"
                                            Grid.Column="0"
                                            HorizontalAlignment="Left"
                                            FontSize="14"
                                            IsTextSelectionEnabled="True"
                                            Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('ProcessArguments')}" />

                                        <TextBlock
                                            Grid.Row="7"
                                            Grid.Column="1"
                                            HorizontalAlignment="Left"
                                            FontSize="14"
                                            IsTextSelectionEnabled="True"
                                            Text="{x:Bind ProcessArguments}"
                                            TextWrapping="Wrap" />

                                        <TextBlock
                                            Grid.Row="8"
                                            Grid.Column="0"
                                            HorizontalAlignment="Left"
                                            FontSize="14"
                                            IsTextSelectionEnabled="True"
                                            Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('Version')}" />

                                        <TextBlock
                                            Grid.Row="8"
                                            Grid.Column="1"
                                            HorizontalAlignment="Left"
                                            FontSize="14"
                                            IsTextSelectionEnabled="True"
                                            Text="{x:Bind Version}"
                                            TextWrapping="Wrap" />
                                    </Grid>
                                </controls:Expander.Content>
                            </controls:Expander>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
        </SplitView.Content>

        <SplitView.Pane>
            <!--  使用说明  -->
            <Grid
                Margin="0,10,0,0"
                Background="{ThemeResource AcrylicInAppFillColorDefaultBrush}"
                CornerRadius="4,0,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Grid
                    Grid.Row="0"
                    Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                    BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                    BorderThickness="0,0,0,1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <FontIcon
                        Grid.Column="0"
                        Margin="16,2,6,0"
                        VerticalAlignment="Center"
                        FontSize="16"
                        Glyph="&#xE946;" />

                    <TextBlock
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        FontSize="14"
                        Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('UseInstruction')}" />

                    <Button
                        Grid.Column="2"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Click="{x:Bind OnCloseClicked}"
                        Style="{StaticResource AlternateCloseButtonStyle}">

                        <Button.Content>
                            <FontIcon
                                Margin="4"
                                FontSize="16"
                                Glyph="&#xE711;" />
                        </Button.Content>

                        <ToolTipService.ToolTip>
                            <ToolTip MaxWidth="9999" Content="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('Close')}" />
                        </ToolTipService.ToolTip>
                    </Button>
                </Grid>

                <ScrollViewer
                    Grid.Row="1"
                    HorizontalScrollBarVisibility="Disabled"
                    HorizontalScrollMode="Disabled"
                    VerticalScrollBarVisibility="Visible"
                    VerticalScrollMode="Enabled">

                    <Grid Margin="0,0,0,30">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <TextBlock
                            Grid.Row="0"
                            Margin="16,10,16,10"
                            FontSize="15"
                            FontWeight="Normal"
                            Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('ScheduledTaskInstruction')}"
                            TextAlignment="Left" />

                        <TextBlock
                            Grid.Row="1"
                            Margin="16,0,16,5"
                            FontSize="14"
                            FontWeight="Normal"
                            Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('ScheduledTaskInstructionContent1')}"
                            TextAlignment="Justify"
                            TextWrapping="Wrap" />

                        <TextBlock
                            Grid.Row="2"
                            Margin="16,0,16,5"
                            FontSize="14"
                            FontWeight="Normal"
                            Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('ScheduledTaskInstructionContent2')}"
                            TextAlignment="Justify"
                            TextWrapping="Wrap" />

                        <StackPanel
                            Grid.Row="3"
                            Margin="16,0,16,5"
                            Spacing="5">

                            <TextBlock HorizontalAlignment="Left">
                                <Hyperlink NavigateUri="https://learn.microsoft.com/windows/win32/taskschd/using-the-task-scheduler" UnderlineStyle="None">
                                    <Run Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('LearnScheduledTask')}" />
                                </Hyperlink>
                            </TextBlock>

                            <TextBlock HorizontalAlignment="Left">
                                <Hyperlink Click="{x:Bind OnRunAsAdministratorClicked}" UnderlineStyle="None">
                                    <Run Text="{x:Bind rootservice:ResourceService.ScheduledTaskManagerResource.GetString('RunAsAdministrator')}" />
                                </Hyperlink>
                            </TextBlock>
                        </StackPanel>
                    </Grid>
                </ScrollViewer>
            </Grid>
        </SplitView.Pane>
    </SplitView>
</Page>
