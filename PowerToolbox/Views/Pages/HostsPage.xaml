<Page
    x:Class="PowerToolbox.Views.Pages.HostsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:class="using:PowerToolbox.Extensions.DataType.Class"
    xmlns:controls="using:Microsoft.UI.Xaml.Controls"
    xmlns:controlshelper="using:PowerToolbox.Helpers.Controls"
    xmlns:converter="using:PowerToolbox.Helpers.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:enum="using:PowerToolbox.Extensions.DataType.Enums"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="using:PowerToolbox.Models"
    xmlns:rootservice="using:PowerToolbox.Services.Root"
    mc:Ignorable="d">

    <Page.Resources>
        <SolidColorBrush x:Key="CommandBarBackgroundOpen" Color="Transparent" />
        <Thickness x:Key="CommandBarBorderThicknessOpen">0</Thickness>

        <class:ExecuteCommand x:Name="EditCommand" ExecuteRequested="{x:Bind OnEditExecuteRequested}" />
        <class:ExecuteCommand x:Name="DeleteCommand" ExecuteRequested="{x:Bind OnDeleteExecuteRequested}" />

        <!--  添加 Hosts 条目浮出控件  -->
        <Flyout x:Name="AddNewHostFlyout" Closing="{x:Bind OnClosing}">
            <Flyout.FlyoutPresenterStyle>
                <Style BasedOn="{StaticResource DefaultFlyoutPresenterStyle}" TargetType="FlyoutPresenter">
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="MaxWidth" Value="9999" />
                    <Setter Property="MaxHeight" Value="9999" />
                    <Setter Property="Background" Value="Transparent" />
                </Style>
            </Flyout.FlyoutPresenterStyle>

            <Grid KeyDown="{x:Bind OnFlyoutKeyDown}" Tag="{x:Bind AddNewHostFlyout}">
                <Rectangle Fill="{ThemeResource ContentDialogSmokeFill}" />

                <Border
                    MinWidth="450"
                    MinHeight="{ThemeResource ContentDialogMinHeight}"
                    MaxWidth="450"
                    MaxHeight="{ThemeResource ContentDialogMaxHeight}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    BorderBrush="{ThemeResource ContentDialogBorderThemeBrush}"
                    BorderThickness="{ThemeResource ContentDialogBorderWidth}"
                    CornerRadius="{ThemeResource OverlayCornerRadius}"
                    RenderTransformOrigin="0.5,0.5">

                    <Grid CornerRadius="{ThemeResource OverlayCornerRadius}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled">

                            <Grid
                                Padding="{ThemeResource ContentDialogPadding}"
                                Background="{ThemeResource DialogContentFillColorBrush}"
                                BorderBrush="{ThemeResource ContentDialogSeparatorBorderBrush}"
                                BorderThickness="{ThemeResource ContentDialogSeparatorThickness}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <TextBlock
                                    Margin="{ThemeResource ContentDialogTitleMargin}"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    FontFamily="{StaticResource ContentControlThemeFontFamily}"
                                    FontSize="20"
                                    FontWeight="SemiBold"
                                    Foreground="{ThemeResource ContentDialogForeground}"
                                    Text="{x:Bind rootservice:ResourceService.HostsResource.GetString('AddNewHost')}" />

                                <StackPanel Grid.Row="1" Spacing="5">
                                    <TextBlock Text="{x:Bind rootservice:ResourceService.HostsResource.GetString('Address')}" />

                                    <TextBox
                                        Margin="0,0,0,5"
                                        HorizontalAlignment="Stretch"
                                        FontFamily="{StaticResource ContentControlThemeFontFamily}"
                                        FontSize="{StaticResource ControlContentThemeFontSize}"
                                        Foreground="{ThemeResource ContentDialogForeground}"
                                        PlaceholderText="{x:Bind rootservice:ResourceService.HostsResource.GetString('AddressPHText')}"
                                        Text="{x:Bind AddressText, Mode=OneWay}"
                                        TextAlignment="Justify"
                                        TextChanged="{x:Bind OnAddressTextChanged}"
                                        TextWrapping="Wrap" />

                                    <TextBlock Text="{x:Bind rootservice:ResourceService.HostsResource.GetString('Host')}" />

                                    <TextBox
                                        HorizontalAlignment="Stretch"
                                        FontFamily="{StaticResource ContentControlThemeFontFamily}"
                                        FontSize="{StaticResource ControlContentThemeFontSize}"
                                        Foreground="{ThemeResource ContentDialogForeground}"
                                        PlaceholderText="{x:Bind rootservice:ResourceService.HostsResource.GetString('HostPHText')}"
                                        Text="{x:Bind HostText, Mode=OneWay}"
                                        TextChanged="{x:Bind OnHostTextChanged}"
                                        TextWrapping="NoWrap" />

                                    <TextBlock Text="{x:Bind rootservice:ResourceService.HostsResource.GetString('Annotation')}" />

                                    <TextBox
                                        HorizontalAlignment="Stretch"
                                        FontFamily="{StaticResource ContentControlThemeFontFamily}"
                                        FontSize="{StaticResource ControlContentThemeFontSize}"
                                        Foreground="{ThemeResource ContentDialogForeground}"
                                        PlaceholderText="{x:Bind rootservice:ResourceService.HostsResource.GetString('AnnotationPHText')}"
                                        Text="{x:Bind AnnotationText, Mode=OneWay}"
                                        TextChanged="{x:Bind OnAnnotationTextChanged}"
                                        TextWrapping="NoWrap" />

                                    <StackPanel
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Orientation="Horizontal"
                                        Spacing="10">

                                        <TextBlock VerticalAlignment="Center" Text="{x:Bind rootservice:ResourceService.HostsResource.GetString('IsAvailable')}" />

                                        <ToggleSwitch IsOn="{x:Bind IsAvailable, Mode=TwoWay}" />
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                        </ScrollViewer>

                        <Grid
                            Grid.Row="1"
                            Padding="{ThemeResource ContentDialogPadding}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Bottom"
                            Background="{ThemeResource ContentDialogBackground}"
                            ColumnSpacing="10">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Button
                                Grid.Column="0"
                                HorizontalAlignment="Stretch"
                                Click="{x:Bind OnAddClicked}"
                                Content="{x:Bind rootservice:ResourceService.HostsResource.GetString('Add')}"
                                IsEnabled="{x:Bind IsPrimaryButtonEnabled, Mode=OneWay}"
                                Style="{ThemeResource AccentButtonStyle}" />

                            <Button
                                Grid.Column="1"
                                HorizontalAlignment="Stretch"
                                Click="{x:Bind OnCloseClicked}"
                                Content="{x:Bind rootservice:ResourceService.HostsResource.GetString('Cancel')}"
                                Tag="{x:Bind AddNewHostFlyout}" />
                        </Grid>
                    </Grid>
                </Border>
            </Grid>
        </Flyout>

        <!--  编辑 Hosts 条目浮出控件  -->
        <Flyout x:Name="EditHostFlyout" Closing="{x:Bind OnClosing}">
            <Flyout.FlyoutPresenterStyle>
                <Style BasedOn="{StaticResource DefaultFlyoutPresenterStyle}" TargetType="FlyoutPresenter">
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="MaxWidth" Value="9999" />
                    <Setter Property="MaxHeight" Value="9999" />
                    <Setter Property="Background" Value="Transparent" />
                </Style>
            </Flyout.FlyoutPresenterStyle>

            <Grid KeyDown="{x:Bind OnFlyoutKeyDown}" Tag="{x:Bind EditHostFlyout}">
                <Rectangle Fill="{ThemeResource ContentDialogSmokeFill}" />

                <Border
                    MinWidth="450"
                    MinHeight="{ThemeResource ContentDialogMinHeight}"
                    MaxWidth="450"
                    MaxHeight="{ThemeResource ContentDialogMaxHeight}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    BorderBrush="{ThemeResource ContentDialogBorderThemeBrush}"
                    BorderThickness="{ThemeResource ContentDialogBorderWidth}"
                    CornerRadius="{ThemeResource OverlayCornerRadius}"
                    RenderTransformOrigin="0.5,0.5">

                    <Grid CornerRadius="{ThemeResource OverlayCornerRadius}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled">

                            <Grid
                                Padding="{ThemeResource ContentDialogPadding}"
                                Background="{ThemeResource DialogContentFillColorBrush}"
                                BorderBrush="{ThemeResource ContentDialogSeparatorBorderBrush}"
                                BorderThickness="{ThemeResource ContentDialogSeparatorThickness}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <TextBlock
                                    Margin="{ThemeResource ContentDialogTitleMargin}"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    FontFamily="{StaticResource ContentControlThemeFontFamily}"
                                    FontSize="20"
                                    FontWeight="SemiBold"
                                    Foreground="{ThemeResource ContentDialogForeground}"
                                    Text="{x:Bind rootservice:ResourceService.HostsResource.GetString('EditHost')}" />

                                <StackPanel Grid.Row="1" Spacing="5">
                                    <TextBlock Text="{x:Bind rootservice:ResourceService.HostsResource.GetString('Address')}" />

                                    <TextBox
                                        Margin="0,0,0,5"
                                        HorizontalAlignment="Stretch"
                                        FontFamily="{StaticResource ContentControlThemeFontFamily}"
                                        FontSize="{StaticResource ControlContentThemeFontSize}"
                                        Foreground="{ThemeResource ContentDialogForeground}"
                                        PlaceholderText="{x:Bind rootservice:ResourceService.HostsResource.GetString('AddressPHText')}"
                                        Text="{x:Bind AddressText, Mode=OneWay}"
                                        TextAlignment="Justify"
                                        TextChanged="{x:Bind OnAddressTextChanged}"
                                        TextWrapping="Wrap" />

                                    <TextBlock Text="{x:Bind rootservice:ResourceService.HostsResource.GetString('Host')}" />

                                    <TextBox
                                        HorizontalAlignment="Stretch"
                                        FontFamily="{StaticResource ContentControlThemeFontFamily}"
                                        FontSize="{StaticResource ControlContentThemeFontSize}"
                                        Foreground="{ThemeResource ContentDialogForeground}"
                                        PlaceholderText="{x:Bind rootservice:ResourceService.HostsResource.GetString('HostPHText')}"
                                        Text="{x:Bind HostText, Mode=OneWay}"
                                        TextChanged="{x:Bind OnHostTextChanged}"
                                        TextWrapping="NoWrap" />

                                    <TextBlock Text="{x:Bind rootservice:ResourceService.HostsResource.GetString('Annotation')}" />

                                    <TextBox
                                        HorizontalAlignment="Stretch"
                                        FontFamily="{StaticResource ContentControlThemeFontFamily}"
                                        FontSize="{StaticResource ControlContentThemeFontSize}"
                                        Foreground="{ThemeResource ContentDialogForeground}"
                                        PlaceholderText="{x:Bind rootservice:ResourceService.HostsResource.GetString('AnnotationPHText')}"
                                        Text="{x:Bind AnnotationText, Mode=OneWay}"
                                        TextChanged="{x:Bind OnAnnotationTextChanged}"
                                        TextWrapping="NoWrap" />

                                    <StackPanel
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Orientation="Horizontal"
                                        Spacing="10">

                                        <TextBlock VerticalAlignment="Center" Text="{x:Bind rootservice:ResourceService.HostsResource.GetString('IsAvailable')}" />

                                        <ToggleSwitch IsOn="{x:Bind IsAvailable, Mode=TwoWay}" />
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                        </ScrollViewer>

                        <Grid
                            Grid.Row="1"
                            Padding="{ThemeResource ContentDialogPadding}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Bottom"
                            Background="{ThemeResource ContentDialogBackground}"
                            ColumnSpacing="10">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Button
                                Grid.Column="0"
                                HorizontalAlignment="Stretch"
                                Click="{x:Bind OnUpdateClicked}"
                                Content="{x:Bind rootservice:ResourceService.HostsResource.GetString('Update')}"
                                IsEnabled="{x:Bind IsPrimaryButtonEnabled, Mode=OneWay}"
                                Style="{ThemeResource AccentButtonStyle}" />

                            <Button
                                Grid.Column="1"
                                HorizontalAlignment="Stretch"
                                Click="{x:Bind OnCloseClicked}"
                                Content="{x:Bind rootservice:ResourceService.HostsResource.GetString('Cancel')}"
                                Tag="{x:Bind EditHostFlyout}" />
                        </Grid>
                    </Grid>
                </Border>
            </Grid>
        </Flyout>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <TextBlock
            Grid.Row="0"
            Margin="30,15,30,0"
            FontSize="22"
            Text="{x:Bind rootservice:ResourceService.HostsResource.GetString('Hosts')}" />

        <!--  Hosts 文件编辑器控制栏  -->
        <Grid
            Grid.Row="1"
            Height="60"
            Margin="30,5,30,3"
            Padding="12,0,0,0"
            Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
            BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
            BorderThickness="1"
            CornerRadius="{StaticResource ControlCornerRadius}">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <AutoSuggestBox
                Grid.Column="0"
                Margin="0,0,2,0"
                VerticalAlignment="Center"
                IsEnabled="{x:Bind GetIsLoading(HostsResultKind), Mode=OneWay}"
                PlaceholderText="{x:Bind rootservice:ResourceService.HostsResource.GetString('SearchHostNamePHText')}"
                QuerySubmitted="{x:Bind OnQuerySubmitted}"
                Text="{x:Bind SearchText, Mode=OneWay}"
                TextChanged="{x:Bind OnTextChanged}" />

            <CommandBar
                Grid.Column="1"
                VerticalAlignment="Center"
                DefaultLabelPosition="Right"
                Opening="{x:Bind controlshelper:CommandBarHelper.OnOpening}">

                <CommandBar.PrimaryCommands>
                    <AppBarButton
                        Click="{x:Bind OnAddNewHostClicked}"
                        IsEnabled="{x:Bind GetIsLoading(HostsResultKind), Mode=OneWay}"
                        Label="{x:Bind rootservice:ResourceService.HostsResource.GetString('AddNewHost')}">

                        <AppBarButton.Icon>
                            <FontIcon Glyph="&#xE710;" />
                        </AppBarButton.Icon>
                    </AppBarButton>

                    <AppBarButton
                        Click="{x:Bind OnRefreshClicked}"
                        IsEnabled="{x:Bind GetIsLoading(HostsResultKind), Mode=OneWay}"
                        Label="{x:Bind rootservice:ResourceService.HostsResource.GetString('Refresh')}">

                        <AppBarButton.Icon>
                            <FontIcon Glyph="&#xE72C;" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                </CommandBar.PrimaryCommands>

                <CommandBar.SecondaryCommands>
                    <AppBarButton Click="{x:Bind OnOpenFileClicked}" Label="{x:Bind rootservice:ResourceService.HostsResource.GetString('OpenFile')}">

                        <AppBarButton.Icon>
                            <FontIcon Glyph="&#xE8A5;" />
                        </AppBarButton.Icon>
                    </AppBarButton>

                    <AppBarButton Click="{x:Bind OnUpdateDNSCacheClicked}" Label="{x:Bind rootservice:ResourceService.HostsResource.GetString('UpdateDNSCache')}">
                        <AppBarButton.Icon>
                            <FontIcon Glyph="&#xE895;" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                </CommandBar.SecondaryCommands>
            </CommandBar>
        </Grid>

        <!--  Hosts 文件编辑器状态显示栏  -->
        <Grid
            Grid.Row="2"
            Height="60"
            Margin="30,0,30,0"
            Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
            BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
            BorderThickness="1"
            CornerRadius="{StaticResource ControlCornerRadius}"
            Visibility="{x:Bind GetHostsSuccessfullyState(HostsResultKind, x:False), Mode=OneWay}">

            <!--  正在加载中  -->
            <StackPanel
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Orientation="Horizontal"
                Spacing="10"
                Visibility="{x:Bind CheckHostsState(HostsResultKind, enum:HostsResultKind.Loading), Mode=OneWay}">

                <controls:ProgressRing IsActive="True" IsEnabled="True" />

                <TextBlock
                    VerticalAlignment="Center"
                    Text="{x:Bind rootservice:ResourceService.HostsResource.GetString('LoadingHosts')}"
                    TextAlignment="Center" />
            </StackPanel>

            <!--  加载失败（包含搜索结果为空）  -->
            <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="{x:Bind HostsFailedContent, Mode=OneWay}"
                TextAlignment="Center"
                Visibility="{x:Bind CheckHostsState(HostsResultKind, enum:HostsResultKind.Failed), Mode=OneWay}" />
        </Grid>

        <!--  Hosts 文件编辑器结果展示项目控件  -->
        <ListView
            Grid.Row="3"
            Padding="30,0,30,30"
            ItemsSource="{x:Bind HostsCollection, Mode=OneWay}"
            SelectionMode="None"
            Visibility="{x:Bind GetHostsSuccessfullyState(HostsResultKind, x:True), Mode=OneWay}">

            <ListView.ItemContainerStyle>
                <Style BasedOn="{StaticResource DefaultListViewItemStyle}" TargetType="ListViewItem">
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="MinHeight" Value="0 " />
                </Style>
            </ListView.ItemContainerStyle>

            <ItemsControl.ItemContainerTransitions>
                <TransitionCollection />
            </ItemsControl.ItemContainerTransitions>

            <ListView.ItemTemplate>
                <DataTemplate x:DataType="model:HostsModel">
                    <Grid
                        Height="60"
                        Margin="0,0,0,2"
                        Padding="16,0,0,0"
                        Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                        BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                        BorderThickness="1"
                        CornerRadius="{StaticResource ControlCornerRadius}">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <StackPanel
                            Grid.Column="0"
                            Margin="0,10"
                            VerticalAlignment="Center"
                            Orientation="Vertical">

                            <TextBlock
                                HorizontalAlignment="Left"
                                IsTextSelectionEnabled="True"
                                Style="{StaticResource BodyTextBlockStyle}"
                                Text="{x:Bind Address}"
                                TextTrimming="CharacterEllipsis"
                                TextWrapping="NoWrap" />

                            <TextBlock
                                HorizontalAlignment="Left"
                                Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                IsTextSelectionEnabled="True"
                                Style="{StaticResource CaptionTextBlockStyle}"
                                TextTrimming="CharacterEllipsis"
                                TextWrapping="NoWrap">

                                <Run Text="{x:Bind Hosts}" />
                                <Run Text=" | " />
                                <Run Text="{x:Bind Annotation}" />
                                <Run Text=" | " />
                                <Run Text="{x:Bind IsAvailableString}" />
                            </TextBlock>

                            <ToolTipService.ToolTip>
                                <ToolTip MaxWidth="9999">
                                    <StackPanel>
                                        <TextBlock>
                                            <Run Text="{x:Bind rootservice:ResourceService.HostsResource.GetString('AddressName')}" />
                                            <Run Text="{x:Bind Address}" />
                                        </TextBlock>

                                        <TextBlock>
                                            <Run Text="{x:Bind rootservice:ResourceService.HostsResource.GetString('HostsName')}" />
                                            <Run Text="{x:Bind Hosts}" />
                                        </TextBlock>

                                        <TextBlock>
                                            <Run Text="{x:Bind rootservice:ResourceService.HostsResource.GetString('AnnotationName')}" />
                                            <Run Text="{x:Bind Annotation}" />
                                        </TextBlock>

                                        <TextBlock>
                                            <Run Text="{x:Bind rootservice:ResourceService.HostsResource.GetString('IsAvailableName')}" />
                                            <Run Text="{x:Bind IsAvailableString}" />
                                        </TextBlock>
                                    </StackPanel>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                        </StackPanel>

                        <CommandBar
                            Grid.Column="1"
                            VerticalAlignment="Center"
                            Opening="{x:Bind controlshelper:CommandBarHelper.OnOpening}">

                            <CommandBar.SecondaryCommands>
                                <AppBarButton
                                    Command="{StaticResource EditCommand}"
                                    CommandParameter="{x:Bind}"
                                    Label="{x:Bind rootservice:ResourceService.HostsResource.GetString('Edit')}">

                                    <AppBarButton.Icon>
                                        <FontIcon Glyph="&#xE70F;" />
                                    </AppBarButton.Icon>
                                </AppBarButton>

                                <AppBarButton
                                    Command="{StaticResource DeleteCommand}"
                                    CommandParameter="{x:Bind}"
                                    Label="{x:Bind rootservice:ResourceService.HostsResource.GetString('Delete')}">

                                    <AppBarButton.Icon>
                                        <FontIcon Glyph="&#xE74D;" />
                                    </AppBarButton.Icon>
                                </AppBarButton>
                            </CommandBar.SecondaryCommands>
                        </CommandBar>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </Grid>
</Page>
